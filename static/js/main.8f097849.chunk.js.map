{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/Main/Main.js","components/App.js","index.js"],"names":["FeedbackOptions","good","neutral","bad","type","onClick","Statistics","countPositiveFeedbackPercentage","countTotalFeedback","toFixed","defaultProps","Section","title","children","Notification","message","Main","state","setState","Object","values","reduce","acc","value","this","Component","App","ReactDOM","render","document","querySelector"],"mappings":"0KAuBeA,EApBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAlB,OACtB,kBAAC,WAAD,KACE,4BAAQC,KAAK,SAASC,QAASJ,GAA/B,QAGA,4BAAQG,KAAK,SAASC,QAASH,GAA/B,WAGA,4BAAQE,KAAK,SAASC,QAASF,GAA/B,SCREG,EAAa,SAAC,GAAD,IACjBL,EADiB,EACjBA,KACAC,EAFiB,EAEjBA,QACAC,EAHiB,EAGjBA,IACAI,EAJiB,EAIjBA,gCACAC,EALiB,EAKjBA,mBALiB,OAOjB,kBAAC,WAAD,KACE,oCAAUP,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWK,KACe,IAAzBA,KACC,gDAEGD,IAAkCE,QAAQ,MAKnDH,EAAWI,aAAe,CACxBT,KAAM,EACNC,QAAS,EACTC,IAAK,GAUQG,QCjCTK,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,iCACE,4BAAKD,GACJC,IAILF,EAAQD,aAAe,CACrBE,MAAO,WAOMD,QCfTG,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,kBAAC,WAAD,KACE,4BAAKA,KAITD,EAAaJ,aAAe,CAC1BK,QAAS,qBAOID,QCXME,E,4MACnBC,MAAQ,CACNhB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPF,KAAO,WACL,EAAKiB,UAAS,SAACD,GAAD,MAAY,CACxBhB,KAAMgB,EAAMhB,KAAO,O,EAGvBC,QAAU,WACR,EAAKgB,UAAS,SAACD,GAAD,MAAY,CACxBf,QAASe,EAAMf,QAAU,O,EAG7BC,IAAM,WACJ,EAAKe,UAAS,SAACD,GAAD,MAAY,CACxBd,IAAKc,EAAMd,IAAM,O,EAIrBI,gCAAkC,WAChC,OAAQ,IAAM,EAAKC,qBAAwB,EAAKS,MAAMhB,M,EAGxDO,mBAAqB,WAInB,OAHcW,OAAOC,OAAO,EAAKH,OAAOI,QAAO,SAACC,EAAKC,GACnD,OAAOD,EAAMC,IACZ,I,uDAIK,IAAD,EACwBC,KAAKP,MAA5BhB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,6BACE,kBAAC,EAAD,CAASS,MAAM,yBACb,kBAAC,EAAD,CACEX,KAAMuB,KAAKvB,KACXC,QAASsB,KAAKtB,QACdC,IAAKqB,KAAKrB,OAGiB,IAA9BqB,KAAKhB,sBACJ,kBAAC,EAAD,CAAcO,QAAQ,sBAEvBS,KAAKhB,qBAAuB,GAC3B,kBAAC,EAAD,CAASI,MAAM,cACb,kBAAC,EAAD,CACEX,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLI,gCACEiB,KAAKjB,gCAEPC,mBAAoBgB,KAAKhB,2B,GAzDLiB,aCGnBC,EANH,kBACV,6BACE,kBAAC,EAAD,QCDJC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.8f097849.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ good, neutral, bad }) => (\r\n  <Fragment>\r\n    <button type=\"button\" onClick={good}>\r\n      good\r\n    </button>\r\n    <button type=\"button\" onClick={neutral}>\r\n      neutral\r\n    </button>\r\n    <button type=\"button\" onClick={bad}>\r\n      bad\r\n    </button>\r\n  </Fragment>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  good: PropTypes.func,\r\n  neutral: PropTypes.func,\r\n  bad: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  countPositiveFeedbackPercentage,\r\n  countTotalFeedback,\r\n}) => (\r\n  <Fragment>\r\n    <p>Good: {good}</p>\r\n    <p>Neutral: {neutral}</p>\r\n    <p>Bad: {bad}</p>\r\n    <p>Total: {countTotalFeedback()}</p>\r\n    {countTotalFeedback() !== 0 && (\r\n      <p>\r\n        Positive feedback:\r\n        {countPositiveFeedbackPercentage().toFixed(2)}\r\n      </p>\r\n    )}\r\n  </Fragment>\r\n);\r\nStatistics.defaultProps = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  countPositiveFeedbackPercentage: PropTypes.func.isRequired,\r\n  countTotalFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h1>{title}</h1>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.defaultProps = {\r\n  title: \"Section\",\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => (\r\n  <Fragment>\r\n    <h1>{message}</h1>\r\n  </Fragment>\r\n);\r\n\r\nNotification.defaultProps = {\r\n  message: \"No feedback given\",\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport Section from \"../Section/Section\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nexport default class Main extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  good = () => {\r\n    this.setState((state) => ({\r\n      good: state.good + 1,\r\n    }));\r\n  };\r\n  neutral = () => {\r\n    this.setState((state) => ({\r\n      neutral: state.neutral + 1,\r\n    }));\r\n  };\r\n  bad = () => {\r\n    this.setState((state) => ({\r\n      bad: state.bad + 1,\r\n    }));\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    return (100 / this.countTotalFeedback()) * this.state.good;\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const total = Object.values(this.state).reduce((acc, value) => {\r\n      return acc + value;\r\n    }, 0);\r\n    return total;\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            good={this.good}\r\n            neutral={this.neutral}\r\n            bad={this.bad}\r\n          />\r\n        </Section>\r\n        {this.countTotalFeedback() === 0 && (\r\n          <Notification message=\"No feedback given\"></Notification>\r\n        )}\r\n        {this.countTotalFeedback() > 0 && (\r\n          <Section title=\"Statistics\">\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              countPositiveFeedbackPercentage={\r\n                this.countPositiveFeedbackPercentage\r\n              }\r\n              countTotalFeedback={this.countTotalFeedback}\r\n            />\r\n          </Section>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Main from \"./Main/Main\";\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Main />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}